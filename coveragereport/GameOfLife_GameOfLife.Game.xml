<?xml version="1.0" encoding="utf-8"?>
<CoverageReport scope="GameOfLife.Game">
  <Summary>
    <Class>GameOfLife.Game</Class>
    <Assembly>GameOfLife</Assembly>
    <Files>
      <File>C:\dev\Coveralls.net-Samples\src\GameOfLife\Game.cs</File>
    </Files>
    <Coveredlines>0</Coveredlines>
    <Uncoveredlines>50</Uncoveredlines>
    <Coverablelines>50</Coverablelines>
    <Totallines>64</Totallines>
    <Linecoverage>0%</Linecoverage>
    <Branchcoverage>0%</Branchcoverage>
  </Summary>
  <Metrics>
    <DrawWorld>
      <Cyclomaticcomplexity>7</Cyclomaticcomplexity>
      <Sequencecoverage>0</Sequencecoverage>
      <Branchcoverage>0</Branchcoverage>
    </DrawWorld>
    <GetNextWorldState>
      <Cyclomaticcomplexity>16</Cyclomaticcomplexity>
      <Sequencecoverage>0</Sequencecoverage>
      <Branchcoverage>0</Branchcoverage>
    </GetNextWorldState>
  </Metrics>
  <Files>
    <File name="C:\dev\Coveralls.net-Samples\src\GameOfLife\Game.cs">
      <LineAnalysis line="1" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System;" />
      <LineAnalysis line="2" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="using System.Linq;" />
      <LineAnalysis line="3" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="4" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="namespace GameOfLife" />
      <LineAnalysis line="5" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="{" />
      <LineAnalysis line="6" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    public static class Game" />
      <LineAnalysis line="7" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    {" />
      <LineAnalysis line="8" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public static void DrawWorld(World world)" />
      <LineAnalysis line="9" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="        {" />
      <LineAnalysis line="10" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="            foreach (int row in Enumerable.Range(0, world.Height))" />
      <LineAnalysis line="11" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            {" />
      <LineAnalysis line="12" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="                foreach (int col in Enumerable.Range(0, world.Width))" />
      <LineAnalysis line="13" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                {" />
      <LineAnalysis line="14" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    var isAlive = world.IsAlive(row, col);" />
      <LineAnalysis line="15" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="                    Console.Write(isAlive ? &quot;[#]&quot; : &quot;[ ]&quot;);" />
      <LineAnalysis line="16" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                }" />
      <LineAnalysis line="17" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                Console.WriteLine(&quot;&quot;);" />
      <LineAnalysis line="18" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            }" />
      <LineAnalysis line="19" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="        }" />
      <LineAnalysis line="20" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="" />
      <LineAnalysis line="21" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="        public static World GetNextWorldState(World world)" />
      <LineAnalysis line="22" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="        {" />
      <LineAnalysis line="23" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            var newWorldData = new bool[world.Height, world.Width];" />
      <LineAnalysis line="24" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="            foreach (int row in Enumerable.Range(0, world.Height))" />
      <LineAnalysis line="25" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            {" />
      <LineAnalysis line="26" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="                foreach (int col in Enumerable.Range(0, world.Width))" />
      <LineAnalysis line="27" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                {" />
      <LineAnalysis line="28" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    var neighbourLiveCount = 0;" />
      <LineAnalysis line="29" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    var offsets = new[] {-1, 0, 1};" />
      <LineAnalysis line="30" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="                    foreach (int rowOffset in offsets)" />
      <LineAnalysis line="31" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    {" />
      <LineAnalysis line="32" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="                        foreach (int colOffset in offsets)" />
      <LineAnalysis line="33" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                        {" />
      <LineAnalysis line="34" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="4" content="                            if (rowOffset == 0 &amp;&amp; colOffset == 0) continue;" />
      <LineAnalysis line="35" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                            var neighbourRow = row + rowOffset;" />
      <LineAnalysis line="36" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                            var neightbourColumn = col + colOffset;" />
      <LineAnalysis line="37" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="10" content="                            if (neightbourColumn &gt;= 0 &amp;&amp;" />
      <LineAnalysis line="38" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                                neightbourColumn &lt; world.Width &amp;&amp;" />
      <LineAnalysis line="39" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                                neighbourRow &gt;= 0 &amp;&amp;" />
      <LineAnalysis line="40" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                                neighbourRow &lt; world.Height &amp;&amp;" />
      <LineAnalysis line="41" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                                world.IsAlive(neighbourRow, neightbourColumn)" />
      <LineAnalysis line="42" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                                )" />
      <LineAnalysis line="43" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                            {" />
      <LineAnalysis line="44" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                                neighbourLiveCount++;" />
      <LineAnalysis line="45" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                            }" />
      <LineAnalysis line="46" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                        }" />
      <LineAnalysis line="47" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    }" />
      <LineAnalysis line="48" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="                    bool newState;" />
      <LineAnalysis line="49" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    var isCurrentlyAlive = world.IsAlive(row, col);" />
      <LineAnalysis line="50" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="                    if (isCurrentlyAlive)" />
      <LineAnalysis line="51" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    {" />
      <LineAnalysis line="52" visits="0" coverage="NotCovered" coveredbranches="0" totalbranches="2" content="                        newState = neighbourLiveCount == 2 || neighbourLiveCount == 3;" />
      <LineAnalysis line="53" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    }" />
      <LineAnalysis line="54" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="                    else" />
      <LineAnalysis line="55" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    {" />
      <LineAnalysis line="56" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                        newState = neighbourLiveCount == 3;" />
      <LineAnalysis line="57" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    }" />
      <LineAnalysis line="58" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                    newWorldData[row, col] = newState;" />
      <LineAnalysis line="59" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="                }" />
      <LineAnalysis line="60" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            }" />
      <LineAnalysis line="61" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="            return new World(newWorldData);" />
      <LineAnalysis line="62" visits="0" coverage="NotCovered" coveredbranches="" totalbranches="" content="        }" />
      <LineAnalysis line="63" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="    }" />
      <LineAnalysis line="64" visits="-1" coverage="NotCoverable" coveredbranches="" totalbranches="" content="}" />
    </File>
  </Files>
</CoverageReport>